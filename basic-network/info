gradle clean build shadowJar

docker exec -it cli bash

peer chaincode install -l java -n mycc -v v1 -p /opt/gopath/src/github.com/chaincode/

peer chaincode instantiate -o orderer.example.com:7050 -C mychannel -n mycc  -v v1 -c '{"Args":[]}' -P 'OR ("Org1MSP.member")'


export CLASSPATH=/opt/gopath/src/github.com/chaincode/build/libs

--------------------------------------------------------------------------------------------------------

peer chaincode invoke -n mycc -c '{"Args":["test_owl"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["create_patient", "1000", "John", "Smith", "01/01/1995"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["create_patient", "2000", "Mark", "Taylor", "01/01/1995"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["get_patient", "1000"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["get_patient", "2000"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["get_all_patients"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["get_patient_history", "1000"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["create_prescription", "1000", "Advil", "1TAB"]}' -C mychannel

peer chaincode invoke -n mycc -c '{"Args":["create_allergy", "1000", "Wheats"]}' -C mychannel


-------------------------------------------------------------------------------------------------------
docker run -it cli echo 'hello world'

docker-compose run cli echo "hello"

docker exec -it cli /bin/bash -c "touch sample.txt" 2>&1

:/opt/gopath/src/github.com/hyperledger/fabric/peer# 

command: >
    bash -c "python manage.py migrate
    && python manage.py runserver 0.0.0.0:8000"

docker exec cli install.sh





